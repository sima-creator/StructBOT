import sqlite3
import os


def check_database_state():
    print("üîç –ü—Ä–æ–≤–µ—Ä—è–µ–º —Å–æ—Å—Ç–æ—è–Ω–∏–µ –±–∞–∑—ã –¥–∞–Ω–Ω—ã—Ö...")

    # –ü—Ä–æ–≤–µ—Ä—è–µ–º —Å—É—â–µ—Å—Ç–≤—É–µ—Ç –ª–∏ —Ñ–∞–π–ª
    if not os.path.exists('bot_database.db'):
        print("‚ùå –§–∞–π–ª bot_database.db –Ω–µ —Å—É—â–µ—Å—Ç–≤—É–µ—Ç!")
        return

    print(f"‚úÖ –§–∞–π–ª –±–∞–∑—ã –¥–∞–Ω–Ω—ã—Ö —Å—É—â–µ—Å—Ç–≤—É–µ—Ç: {os.path.getsize('bot_database.db')} –±–∞–π—Ç")

    conn = sqlite3.connect('bot_database.db')
    cursor = conn.cursor()

    try:
        # –ü—Ä–æ–≤–µ—Ä—è–µ–º —Ç–∞–±–ª–∏—Ü—É orders
        cursor.execute('SELECT COUNT(*) FROM orders')
        orders_count = cursor.fetchone()[0]
        print(f"üì¶ –ó–∞–∫–∞–∑–æ–≤ –≤ —Ç–∞–±–ª–∏—Ü–µ: {orders_count}")

        # –ü–æ–∫–∞–∑—ã–≤–∞–µ–º –≤—Å–µ –∑–∞–∫–∞–∑—ã
        cursor.execute('SELECT order_id, user_id, subject, topic FROM orders')
        orders = cursor.fetchall()

        if orders:
            print("\nüìã –°–ø–∏—Å–æ–∫ –∑–∞–∫–∞–∑–æ–≤:")
            for order in orders:
                print(f"   #{order[0]} - User:{order[1]} - {order[2]} - {order[3]}")
        else:
            print("‚úÖ –ó–∞–∫–∞–∑–æ–≤ –Ω–µ—Ç - —Ç–∞–±–ª–∏—Ü–∞ –ø—É—Å—Ç–∞")

        # –ü—Ä–æ–≤–µ—Ä—è–µ–º sqlite_sequence
        cursor.execute('SELECT * FROM sqlite_sequence WHERE name="orders"')
        seq = cursor.fetchone()
        if seq:
            print(f"üî¢ –ê–≤—Ç–æ–∏–Ω–∫—Ä–µ–º–µ–Ω—Ç orders: {seq[1]}")
        else:
            print("‚úÖ –ê–≤—Ç–æ–∏–Ω–∫—Ä–µ–º–µ–Ω—Ç orders —Å–±—Ä–æ—à–µ–Ω")

    except Exception as e:
        print(f"‚ùå –û—à–∏–±–∫–∞ –ø—Ä–∏ –ø—Ä–æ–≤–µ—Ä–∫–µ: {e}")
    finally:
        conn.close()


if __name__ == '__main__':
    check_database_state()